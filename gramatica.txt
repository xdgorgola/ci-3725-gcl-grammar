// Operaciones con arreglos
writeABody -> TkOpenPar exp TkTwoPoints exp TkClosePar

writeA    -> TkId  writeABody
          | writeA writeABody

readA     -> writeA  TkOBracket exp TkCBracket
          | TkId TkOBracket exp TkCBracket


// Expresiones
numericLit     -> TkMinus numericLit
               | TkNum 

exp       -> TkOpenPar exp TkClosePar 
          | TkMinus exp 
          | TkNot exp 
          | exp TkMult exp 
          | exp TkPlus exp
          | exp TkMinus exp 
          | exp TkGeq exp
          | exp TkGreater exp
          | exp TkLeq exp
          | exp TkLess exp
          | exp TkEqual exp
          | exp TkNEqual exp 
          | exp TkAnd exp 
          | exp TkOr exp 
          | TkId 
          | TkNum 
          | readA
          | TkTrue 
          | TkFalse 


// Instrucciones
concatenable   -> TkString
               | exp

concatenation  -> concatenable TkConcat concatenable
               | concatenation TkConcat concatenable
               | TkOpenPar concatenation TkClosePar

asignable      -> exp 
               | writeA

arrayInit      -> arrayInit TkComma asignable
               | asignable TkComma asignable

asignation     -> TkId TkAsig asignable 
               | TkId TkAsig arrayInit

printeable     -> TkString
               | concatenation 
               | exp

print     -> TkPrint printeable


// Bloques
then -> exp TkArrow inst 
     | exp TkArrow seq

in   -> TkId TkIn to

to   -> exp TkTo exp

forOp     -> TkFor in TkArrow inst TkRof
          | TkFor in TkArrow seq TkRof

guard     -> then TkGuard then
          | guard TkGuard then

ifOp -> TkIf guard TkFi
     | TkIf then TkFi

doOp -> TkDo guard TkOd
     | TkDo then TkOd


// Secuencias
type -> TkInt 
     | TkBool 
     | TkArray TkOBracket numericLit TkSoForth numericLit TkCBracket 

decl -> TkId decl TkTwoPoints type 
     | TkId TkTwoPoints type 
     | TkComma TkId decl
     | TkComma TkId

seqDecl   -> decl TkSemicolon decl
          | seqDecl TkSemicolon decl 

inst -> forOp
     | ifOp
     | doOp
     | asignation
     | print
     | block
     | TkSkip

seq  -> inst TkSemicolon inst
     | seq TkSemicolon inst

declarationBlock   -> TkDeclare decl 
                    | TkDeclare seqDecl

// Símbolo inicial de la gramática
block     -> TkOBlock declarationBlock inst TkCBlock 
          | TkOBlock declarationBlock seq TkCBlock
          | TkOBlock inst TkCBlock 
          | TkOBlock seq TkCBlock